DECLARE a void FUNCTION Welcome()
DECLARE an integer FUNCTION ReadInt(string prompt)
DECLARE a void FUNCTION ReadScore(string prompt, double& num)
DECLARE a double FUNCTION AssignAverage(int numAssigns)
DECLARE a void FUNCTION GetInput(double& midtermScore, double& finalExamScore)
DECLARE a double FUNCTION CalcFinalScore(double assignAvg, double midterm, double final)
DECLARE a char FUNCTION CalcLetterGrade(double finalScore, char& letter)

SET a constant double ASSIGNMENT_WEIGHT = 0.6
SET a constant double MIDTERM_WEIGHT = 0.2
SET a constant double FINAL_WEIGHT = 0.2

FUNCTION integer main()
    DECLARE an integer numAssignments
    DECLARE a double assignmentAverage
    DECLARE a double midTermScore
    DECLARE a double finalScore
    DECLARE a double allTermScore
    DECLARE a character termGrade

    CALL Welcome()
    SET numAssignments = CALL ReadInt("Input the number of assignments completed (0-10): ")
    SET AssignAverage = CALL AssignAverage(numAssignments)
    CALL GetInput(midtermScore, finalExamScore)
    SET allTermScore = CALL CalcFinalScore(assignmentAverage, midTermScore, finalsScore)

    SET output for doubles to one decimal place
    DISPLAY "The score for the whole term is: " allTermScore
    DISPLAY "Your grade for the term is: " CALL CalcLetterGrade(allTermScore)

    DISPLAY "Thank you for using the calculator >>>> Goodbye!!"

    RETURN 0
END FUNCTION

FUNCTION void Welcome()
    DISPLAY "Hello!! Welcome to the grade calculator!"
    DISPLAY "You will enter the number of assignments taken throughout the term."
    DISPLAY "I will validate the data keyed in and output the final score and grade if data is valid."
    DISPLAY "Let's begin!!"
END FUNCTION

FUNCTION integer ReadInt(string prompt)
    DECLARE as an integer assignments
    DEFINE as a boolean validInput = FALSE

    DO
        DISPLAY prompt
        INPUT assignments

        IF (cin.fail() OR assignments < 0 OR assignments > 10) THEN
            SET cin.clear()
            SET cin.ignore(numeric_limits<streamsize>::max())
            DISPLAY "Error!! Invalid input. Please enter a number btween 0 and 10"
        ELSE
            SET validInput = TRUE
        END IF
    WHILE(NOT validInput)

    RETURN assignments
END FUNCTION

FUNCTION double ReadScore(string prompt, double& score)
    DEFINE as a boolean validInput = FALSE

    DO
        DISPLAY prompt
        INPUT score

        IF (cin.fail() OR assignments < 0 OR assignments > 10) THEN
            SET cin.clear()
            SET cin.ignore(numeric_limits<streamsize>::max())
            DISPLAY "Not a valid input! Score can only be between 0 and 4.0!!"
        ELSE
            validInput = TRUE
        END IF
    WHILE (NOT validInput)

    RETURN score
END FUNCTION

FUNCTION double AssignAverage(int numAssigns)
    DECLARE as a double average
    DECLARE as a double total
    DECLARE as a double score
    DECLARE as an integer i
    DECLARE as a string prompt

    IF (numAssignments == 0) THEN
        RETURN 0.0
    END IF

    FOR (i = 1; i <= numAssignments; ++i)
        SET prompt = "Enter score for assignment " + to_string(i) + ": "
        CALL ReadScore(prompt, score)
        SET total += score
    END FOR
    SET average = total / numAssignments

    RETURN average
END FUNCTION

FUNCTION GetInput(double& midtermScore, double& finalExamScore)
    CALL ReadScore("Enter the midterm exam score: ")
    CALL  ReadScore("Enter the final exam score: ")
END FUNCTION

FUNCTION double CalcFinalScore(double assignAvg, double midterm, double final)
    DECLARE finalScore as a double

    SET finalScore = (assignAvg * ASSIGNMENT_WEIGHT) + (midterm * MIDTERM_WEIGHT) + (final * FINAL_WEIGHT)

    RETURN finalScore
END FUNCTION

FUNCTION char CalcLetterGrade(double finalScore, char& letter)
    IF (finalScore >= 3.3) THEN
        RETURN 'A'
    ELSE IF (finalScore >= 2.8) THEN
        RETURN 'B'
    ELSE IF (finalScore >= 2.0) THEN
        RETURN 'C'
    ELSE IF (finalScore >= 1.2) THEN
        RETURN 'D'
    ELSE
        RETURN 'F'
    END IF

    RETURN letter
END FUNCTION